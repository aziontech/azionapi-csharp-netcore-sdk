/*
 * Variables
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using variables.Client;
using variables.Api;
// uncomment below to import models
//using variables.Model;

namespace variables.Test.Api
{
    /// <summary>
    ///  Class for testing VariablesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VariablesApiTests : IDisposable
    {
        private VariablesApi instance;

        public VariablesApiTests()
        {
            instance = new VariablesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VariablesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' VariablesApi
            //Assert.IsType<VariablesApi>(instance);
        }

        /// <summary>
        /// Test ApiSchemaRetrieve
        /// </summary>
        [Fact]
        public void ApiSchemaRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string format = null;
            //string lang = null;
            //var response = instance.ApiSchemaRetrieve(format, lang);
            //Assert.IsType<Dictionary<string, Object>>(response);
        }

        /// <summary>
        /// Test ApiVariablesCreate
        /// </summary>
        [Fact]
        public void ApiVariablesCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VariableCreate variableCreate = null;
            //var response = instance.ApiVariablesCreate(variableCreate);
            //Assert.IsType<VariableGet>(response);
        }

        /// <summary>
        /// Test ApiVariablesDestroy
        /// </summary>
        [Fact]
        public void ApiVariablesDestroyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //instance.ApiVariablesDestroy(uuid);
        }

        /// <summary>
        /// Test ApiVariablesList
        /// </summary>
        [Fact]
        public void ApiVariablesListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiVariablesList();
            //Assert.IsType<List<Variable>>(response);
        }

        /// <summary>
        /// Test ApiVariablesRetrieve
        /// </summary>
        [Fact]
        public void ApiVariablesRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //var response = instance.ApiVariablesRetrieve(uuid);
            //Assert.IsType<Variable>(response);
        }

        /// <summary>
        /// Test ApiVariablesUpdate
        /// </summary>
        [Fact]
        public void ApiVariablesUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string uuid = null;
            //VariableCreate variableCreate = null;
            //var response = instance.ApiVariablesUpdate(uuid, variableCreate);
            //Assert.IsType<VariableGet>(response);
        }
    }
}
